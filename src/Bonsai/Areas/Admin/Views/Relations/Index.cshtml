@using Bonsai.Areas.Admin.ViewModels.Relations
@using Bonsai.Areas.Front.Components
@using Bonsai.Code.DomainModel.Media
@using Bonsai.Code.Services
@using Bonsai.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Bonsai
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model RelationsListVM
@{
    ViewBag.Title = Texts.Admin_Relations_List_Title;
    Layout = "~/Areas/Admin/Views/Layout.cshtml";

    var baseUrl = Url.Action("Index", "Relations", new { area = "Admin" });
}

<h1>@Texts.Admin_Relations_List_Title</h1>

<div class="clearfix">
    <div class="float-left">
        <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("Create", "Relations", new {area = "Admin"})" title="@Texts.Admin_Relations_List_CreateNew">
            <span class="fa fa-plus-circle"></span>
            @Texts.Admin_Global_Create
        </a>
    </div>
    <div class="float-right">
        <form action="@baseUrl" method="GET" class="form-inline">
            @await Component.InvokeAsync("ListHiddenFilterComponent", new
            {
                request = Model.Request,
                include = new [] { nameof(RelationsListRequestVM.EntityId) }
            })
            @if(Model.EntityTitle != null)
            {
                @await Component.InvokeAsync("ListItemFilterComponent", new
                {
                    url = baseUrl,
                    request = Model.Request,
                    propName = nameof(RelationsListRequestVM.EntityId),
                    title = Model.EntityTitle
                })
            }
            <input type="text" class="form-control form-control-sm mr-sm-2" name="@nameof(RelationsListRequestVM.SearchQuery)" value="@Model.Request.SearchQuery" placeholder="@Texts.Admin_Relations_List_PageTitle" />
            <button class="btn btn-sm btn-outline-secondary" type="submit">@Texts.Admin_Global_Find</button>
        </form>
    </div>
</div>

@if(Model.Items.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th width="42%">@await Component.InvokeAsync("ListHeaderComponent", new { url = baseUrl, request = Model.Request, propName = nameof(RelationTitleVM.Destination), title = Texts.Admin_Relations_List_Page })</th>
                <th width="16%">@await Component.InvokeAsync("ListHeaderComponent", new { url = baseUrl, request = Model.Request, propName = nameof(RelationTitleVM.Type), title = Texts.Admin_Relations_List_RelationType })</th>
                <th width="42%">@await Component.InvokeAsync("ListHeaderComponent", new { url = baseUrl, request = Model.Request, propName = nameof(RelationTitleVM.Source), title = Texts.Admin_Relations_List_RelatedPage })</th>
                <th width="1px"></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var r in Model.Items)
            {
            <tr class="admin-row">
                <td class="hide-overflow">
                    <page-image image="@r.Destination.MainPhotoPath" type="@r.Destination.Type" size="@MediaSize.Small"></page-image>
                    <span title="@r.Destination.Title">@r.Destination.Title</span>
                </td>
                <td>
                    <a href="@Url.Action("Update", "Relations", new {area = "Admin", id = r.Id})" title="@Texts.Admin_Global_Edit">
                        @r.Type.GetLocaleEnumDescription()
                    </a>
                </td>
                <td class="hide-overflow">
                    <page-image image="@r.Source.MainPhotoPath" type="@r.Source.Type" size="@MediaSize.Small"></page-image>
                    <span title="@r.Source.Title">@r.Source.Title</span>
                </td>
                <td class="admin-row-actions">
                    <a href="@Url.Action("Remove", "Relations", new {area = "Admin", id = r.Id})">
                        <span class="fa fa-remove" title="@Texts.Admin_Global_Remove"></span>
                    </a>
                    <a href="@Url.Action("Index", "Changesets", new {area = "Admin", entityId = r.Id})">
                        <span class="fa fa-database" title="@Texts.Admin_Global_ChangeHistory"></span>
                    </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
else
{
    if(Model.Request.IsEmpty())
    {
        <div class="alert alert-info">@Texts.Admin_Relations_List_Empty</div>
    }
    else
    {
        <div class="alert alert-info">@Texts.Admin_Relations_List_NotFound</div>
    }
}

<div class="clearfix">
    <div class="pull-right">
        @await Component.InvokeAsync("ListPaginatorComponent", new
        {
            url = baseUrl,
            request = Model.Request,
            pageCount = Model.PageCount
        })
    </div>
</div>