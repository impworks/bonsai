@using Bonsai.Areas.Front.ViewModels.Auth
@using Bonsai.Areas.Front.ViewModels.Page
@using Bonsai.Areas.Front.ViewModels.Page.InfoBlock
@using Bonsai.Code.Services.Config
@using Bonsai.Data.Models
@using Bonsai.Localization
@inject BonsaiConfigService ConfigService
@{
    Layout = "~/Areas/Front/Views/Layout.cshtml";

    var pageVm = (PageTitleVM)Model.Body;
    var infoBlock = (InfoBlockVM)Model.InfoBlock;
    var user = (UserVM)ViewBag.User;
    var isPreview = (bool?)ViewBag.IsPreview ?? false;

    var showTree = pageVm.Type == PageType.Person
                   && ConfigService.GetDynamicConfig().TreeKinds != 0;
}

<div id="page" class="row flex-grow-1">
    <div class="sidebar col-3">
        @await Html.PartialAsync("~/Areas/Front/Views/Page/InfoBlock/InfoBlock.cshtml", infoBlock)
    </div>
    <div class="content col-9">
        <div class="content-header">
            <h1>@pageVm.Title</h1>
            @if(user?.IsAdministrator == true && !isPreview)
            {
                <span class="dropdown dropdown-icons">
                    <button class="btn btn-sm btn-outline-secondary" type="button" data-toggle="dropdown">
                        <i class="fa fa-cog"></i>
                    </button>
                    <span class="dropdown-menu">
                        <a class="dropdown-item" href="@Url.Action("Update", "Pages", new {area = "Admin", id = pageVm.Id})">
                            <i class="fa fa-fw fa-file-text-o"></i> @Texts.Front_Page_AdminLinks_TextAndFacts
                        </a>
                        <a class="dropdown-item" href="@Url.Action("Index", "Relations", new {area = "Admin", entityId = pageVm.Id})">
                            <i class="fa fa-fw fa-retweet"></i> @Texts.Front_Page_AdminLinks_Relations
                        </a>
                        <a class="dropdown-item" href="@Url.Action("Index", "Media", new {area = "Admin", entityId = pageVm.Id})">
                            <i class="fa fa-fw fa-picture-o"></i> @Texts.Front_Page_AdminLinks_Media
                        </a>
                        <a class="dropdown-item" href="@Url.Action("Index", "Changesets", new {area = "Admin", entityId = pageVm.Id})">
                            <i class="fa fa-fw fa-database"></i> @Texts.Front_Page_AdminLinks_Changes
                        </a>
                    </span>
                </span>
            }
        </div>
        @if(!isPreview)
        {
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link @(pageVm is PageDescriptionVM ? "active" : "")" href="@Url.Action("Description", new {key = pageVm.Key})">
                        <i class="fa fa-user"></i> @Texts.Front_Page_Tabs_Description
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(pageVm is PageMediaVM ? "active" : "")" href="@Url.Action("Media", new {key = pageVm.Key})">
                        <i class="fa fa-image"></i> @Texts.Front_Page_Tabs_Media
                    </a>
                </li>
                @if (showTree)
                {
                    <li class="nav-item">
                        <a class="nav-link @(pageVm is PageTreeVM ? "active" : "")" href="@Url.Action("Tree", new {key = pageVm.Key})">
                            <i class="fa fa-sitemap"></i> @Texts.Front_Page_Tabs_Tree
                        </a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link @(pageVm is PageReferencesVM ? "active" : "")" href="@Url.Action("References", new {key = pageVm.Key})">
                        <i class="fa fa-random"></i> @Texts.Front_Page_Tabs_References
                    </a>
                </li>
            </ul>
        }
        @RenderBody()
    </div>
</div>

@section Scripts {
    @RenderSection("Scripts", false)
}
