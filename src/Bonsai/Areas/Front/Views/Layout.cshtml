@using Bonsai.Code.Services.Config
@inject BonsaiConfigService ConfigService
@{
    var appTitle = "Bonsai";
    var rootUrl = "/";
    var isStarted = ViewBag.StartupMode != true;

    if (isStarted)
    {
        appTitle = ConfigService.GetDynamicConfig().Title;
        rootUrl = Url.Action("Index", "Home", new {area = "Front"});
    }

    var demoCfg = ConfigService.GetStaticConfig().DemoMode;
}

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@appTitle &mdash; @ViewBag.Title</title>
    <link href="@Url.Content("~/assets/styles/style.css")" rel="stylesheet" />
    @RenderSection("Head", false)
</head>
<body>
<div class="main-container d-flex flex-column">
    <header class="main-header border-bottom shadow-sm">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-auto">
                    <a class="logotype d-flex" href="@rootUrl">
                        <div class="logotype-image">
                            <img src="/assets/img/logo.svg">
                        </div>
                        <div class="logotype-text">@appTitle</div>
                    </a>
                </div>
                <div class="col search">
                    @if (ViewBag.DisableSearch == null)
                    {
                        <form method="get" action="@Url.Action("Search", "Search")">
                            <input type="text" name="query" id="search-query" placeholder="Поиск…" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" value="@ViewBag.SearchQuery" />
                        </form>
                    }
                </div>
                <div class="col-auto">
                    @if (isStarted)
                    {
                        @await Component.InvokeAsync("UserHeaderComponent")
                    }
                </div>
            </div>
        </div>
    </header>
    @RenderBody()
</div>
    @await Html.PartialAsync("~/Areas/Common/Views/JsLocalization.cshtml")
    <script src="@Url.Content("~/assets/scripts/vendor-common.js")"></script>
    <script src="@Url.Content("~/assets/scripts/common.js")"></script>
    <script src="@Url.Content("~/assets/scripts/front.js")"></script>
    @RenderSection("Scripts", false)

    @if (demoCfg.Enabled && !string.IsNullOrEmpty(demoCfg.YandexMetrikaId))
    {
        <script type="text/javascript">
            (function (m, e, t, r, i, k, a) {
                    m[i] = m[i] || function () { (m[i].a = m[i].a || []).push(arguments) };
                    m[i].l = 1 * new Date(); k = e.createElement(t), a = e.getElementsByTagName(t)[0], k.async = 1, k.src = r, a.parentNode.insertBefore(k, a)
                })
                (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

            ym(@(demoCfg.YandexMetrikaId), "init", {
                clickmap: true,
                trackLinks: true,
                accurateTrackBounce: true
            });
        </script>
        <noscript><div><img src="https://mc.yandex.ru/watch/@(demoCfg.YandexMetrikaId)" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    }
</body>
</html>